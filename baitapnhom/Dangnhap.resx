<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>